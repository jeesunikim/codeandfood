{"version":3,"sources":["main.js","nav.js","scrollFadeIn.js"],"names":["window","document","$","undefined","navSelf","fixedNav","prototype","init","this","isSticky","mainNav","bodyContainer","scrollPositionStart","bindEvents","checkSticky","startScrolling","scrollTop","defaultLH","parseInt","css","calculatedLH","console","log","on","onScroll","setSticky","setUnsticky","nav","jQuery","posts","eachPost","find","ready","each","i","delay","queue","addClass"],"mappings":"AAAA,cCAA,SAAWA,EAAQC,EAAUC,EAAGC,GAE/B,GAAIC,GACHC,EAAW,YAGZA,GAASC,UAAUC,KAAO,WAEzBC,KAAKC,UAAW,EAChBD,KAAKE,QAAUR,EAAE,UACjBM,KAAKG,cAAgBT,EAAE,QACvBM,KAAKI,oBAAsB,EAE3BR,EAAUI,KAEVA,KAAKK,aACLL,KAAKM,eAGNT,EAASC,UAAUO,WAAa,WAE/BL,KAAKO,kBAINV,EAASC,UAAUQ,YAAc,WAChC,GAAIE,GAAYd,EAAED,GAAUe,WAEpBZ,GAAQK,WAETD,KAAKS,UAAYC,SAASd,EAAQM,QAAQS,IAAI,gBAC9CX,KAAKY,aAEXC,QAAQC,IAAId,KAAKS,UAAW,kBAGjBT,KAAKS,UAAY,MAEpBT,KAAKY,aAAeF,SAASV,KAAKS,WAAaD,EAChDZ,EAAQM,QAAQS,IAAI,cAAeX,KAAKY,aAAe,MACvDC,QAAQC,IAAI,oBAAqBd,KAAKY,aAAe,SA0B9Df,EAASC,UAAUS,eAAiB,WACnCX,EAAQO,cAAcY,GAAG,SAAUf,KAAKgB,UACxCtB,EAAEF,GAAQuB,GAAG,SAAUf,KAAKgB,WAG7BnB,EAASC,UAAUkB,SAAW,WAC7BpB,EAAQU,eAGTT,EAASC,UAAUmB,UAAY,WAC9BrB,EAAQK,UAAW,GAIpBJ,EAASC,UAAUoB,YAAc,WAChCtB,EAAQK,UAAW,GAGpBP,EAAE,WAED,GAAIyB,GAAM,GAAItB,EACdsB,GAAIpB,UAsBHP,OAAQC,SAAU2B,OC7GrB,IAAIC,OAAQ3B,EAAE,YACb4B,SAAWD,MAAME,KAAK,KAEvB7B,GAAED,UAAU+B,MAAM,WACjBF,SAASG,KAAK,SAASC,GAEtBhC,EAAEM,MAAM2B,MAAU,IAAJD,GAASE,MAAM,WAC5BlC,EAAEM,MAAM6B,SAAS","file":"main.js","sourcesContent":["'use strict';\n\n(function (window, document, $, undefined) {\n\n\tvar navSelf,\n\t    fixedNav = function fixedNav() {},\n\t    scrollThreshold = 50;\n\n\tfixedNav.prototype.init = function () {\n\n\t\tthis.isSticky = false;\n\t\tthis.mainNav = $('header');\n\t\tthis.bodyContainer = $('body');\n\t\tthis.scrollPositionStart = 0;\n\n\t\tnavSelf = this;\n\n\t\tthis.bindEvents();\n\t\tthis.checkSticky();\n\t};\n\n\tfixedNav.prototype.bindEvents = function () {\n\n\t\tthis.startScrolling();\n\t};\n\n\tfixedNav.prototype.checkSticky = function () {\n\t\tvar scrollTop = $(document).scrollTop();\n\n\t\tif (!navSelf.isSticky) {\n\n\t\t\tthis.defaultLH = parseInt(navSelf.mainNav.css('line-height')); // 140\n\t\t\tthis.calculatedLH;\n\n\t\t\tconsole.log(this.defaultLH, 'this.defaultLH');\n\n\t\t\tif (this.defaultLH > 110) {\n\n\t\t\t\tthis.calculatedLH = parseInt(this.defaultLH) - scrollTop;\n\t\t\t\tnavSelf.mainNav.css('line-height', this.calculatedLH + 'px');\n\t\t\t\tconsole.log('this.calculatedLH', this.calculatedLH + 'px');\n\t\t\t}\n\t\t}\n\n\t\t// console.log(scrollTop, 'scrollTop', this.defaultLH, 'defaultLH');\n\n\t\t// subtract the number of scroll value\n\n\t\t// var isMobile = (this.breakpoints.current === 'sm') ? true : false;\n\t\t// var mainNavFixed = $(this.mainNav).hasClass('is-fixed');\n\n\t\t// var isNavFixed = mainNavFixed && isMobile;\n\t\t// var navAdjustment = isNavFixed ? this.mainNavHeight : 0;\n\t\t// var threshold = mainNavFixed && isMobile ? this.originalY - this.mainNavHeight : this.originalY;\n\n\t\t// // check if we need to set sticky\n\t\t// if (scrollTop >= threshold && !this.isSticky) {\n\t\t//     this.setSticky();\n\t\t// } else if (scrollTop < (this.originalY - navAdjustment) && this.isSticky) {\n\t\t//     this.setUnsticky();\n\t\t// }\n\t};\n\n\tfixedNav.prototype.startScrolling = function () {\n\t\tnavSelf.bodyContainer.on('scroll', this.onScroll);\n\t\t$(window).on('scroll', this.onScroll);\n\t};\n\n\tfixedNav.prototype.onScroll = function () {\n\t\tnavSelf.checkSticky();\n\t};\n\n\tfixedNav.prototype.setSticky = function () {\n\t\tnavSelf.isSticky = true;\n\t};\n\n\tfixedNav.prototype.setUnsticky = function () {\n\t\tnavSelf.isSticky = false;\n\t};\n\n\t$(function () {\n\n\t\tvar nav = new fixedNav();\n\t\tnav.init();\n\n\t\t// window.onscroll = function (e) {\n\t\t// \tvar scrollY = window.pageYOffset;\n\t\t// \tvar $header = $(\"header.site-header nav\");\n\t\t// \tvar $nav = $header.find('nav');\n\n\t\t// \tif (scrollY > 90) {\n\t\t// \t\tif(!$nav.hasClass('fixed')) {\n\t\t// \t\t\t$nav.addClass('fixed');\n\t\t// \t\t}\n\t\t// \t}else{\n\t\t// \t\tif($nav.hasClass('fixed')) {\n\t\t// \t\t\t$nav.removeClass('fixed');\n\t\t// \t\t}\n\t\t// \t}\n\t\t// };\n\t});\n})(window, document, jQuery);\n'use strict';\n\nvar posts = $('ul.posts'),\n    eachPost = posts.find('li');\n\n$(document).ready(function () {\n\teachPost.each(function (i) {\n\t\t// console.log(i * 400, \"I\");\n\t\t$(this).delay(i * 350).queue(function () {\n\t\t\t$(this).addClass('fadein');\n\t\t});\n\n\t\t// $(this).attr('data-post-sroll', 'in-view');\n\t\t// console.log($(this), \"THIS\");\n\t\t//  setTimeout(function () {\n\t\t//  \t$(this).css('visibility','visible');\n\t\t//  }, 2000);\n\t});\n});","(function (window, document, $, undefined) {\n\n\tvar navSelf,\n\t\tfixedNav = function() {},\n\t\tscrollThreshold = 50;\n\n\tfixedNav.prototype.init = function () {\n\n\t\tthis.isSticky = false;\n\t\tthis.mainNav = $('header');\n\t\tthis.bodyContainer = $('body');\n\t\tthis.scrollPositionStart = 0;\n\t\t\n\t\tnavSelf = this;\n\n\t\tthis.bindEvents();\n\t\tthis.checkSticky();\n\t}\n\n\tfixedNav.prototype.bindEvents = function () {\n\t\t\n\t\tthis.startScrolling();\n\t\n\t}\n\n\tfixedNav.prototype.checkSticky = function() {\n\t\tvar scrollTop = $(document).scrollTop();\n\n\t    if (!navSelf.isSticky) {\n\n\t        this.defaultLH = parseInt(navSelf.mainNav.css('line-height')); // 140\n\t        this.calculatedLH;\n\n\t\t\tconsole.log(this.defaultLH, 'this.defaultLH');\n\n\n\t        if ( this.defaultLH > 110 ) {\n\n\t        \t this.calculatedLH = parseInt(this.defaultLH) - scrollTop;\n\t        \tnavSelf.mainNav.css('line-height', this.calculatedLH + 'px');\t\n\t\t        console.log('this.calculatedLH', this.calculatedLH + 'px');\n\t        } \n\n\t        \n\n\t    }\n\n\t    // console.log(scrollTop, 'scrollTop', this.defaultLH, 'defaultLH');\n\n\t    // subtract the number of scroll value \n\n\t    // var isMobile = (this.breakpoints.current === 'sm') ? true : false;\n\t    // var mainNavFixed = $(this.mainNav).hasClass('is-fixed');\n\n\t    // var isNavFixed = mainNavFixed && isMobile;\n\t    // var navAdjustment = isNavFixed ? this.mainNavHeight : 0;\n\t    // var threshold = mainNavFixed && isMobile ? this.originalY - this.mainNavHeight : this.originalY;\n\n\t    // // check if we need to set sticky\n\t    // if (scrollTop >= threshold && !this.isSticky) {\n\t    //     this.setSticky();\n\t    // } else if (scrollTop < (this.originalY - navAdjustment) && this.isSticky) {\n\t    //     this.setUnsticky();\n\t    // }\n\t};\n\n\tfixedNav.prototype.startScrolling = function () {\n\t\tnavSelf.bodyContainer.on('scroll', this.onScroll);\n\t\t$(window).on('scroll', this.onScroll);\n\t}\t\n\n\tfixedNav.prototype.onScroll = function () {\n\t\tnavSelf.checkSticky();\n\t}\n\n\tfixedNav.prototype.setSticky = function () {\n\t\tnavSelf.isSticky = true;\n\n\t}\n\n\tfixedNav.prototype.setUnsticky = function () {\n\t\tnavSelf.isSticky = false;\n\t}\n\n\t$(function() {\n\t\t\n\t\tvar nav = new fixedNav();\n\t\tnav.init();\n\n\t\t// window.onscroll = function (e) {\n\t\t// \tvar scrollY = window.pageYOffset;\n\t\t// \tvar $header = $(\"header.site-header nav\");\n\t\t// \tvar $nav = $header.find('nav');\n\n\n\t\t// \tif (scrollY > 90) {\n\t\t// \t\tif(!$nav.hasClass('fixed')) {\n\t\t// \t\t\t$nav.addClass('fixed');\n\t\t// \t\t}\n\t\t// \t}else{\n\t\t// \t\tif($nav.hasClass('fixed')) {\n\t\t// \t\t\t$nav.removeClass('fixed');\n\t\t// \t\t}\n\t\t// \t}\n\t\t// };\n\n\n\t});\n\n})(window, document, jQuery);","var posts = $('ul.posts'),\n\teachPost = posts.find('li');\n\t\n$(document).ready(function () {\n\teachPost.each(function(i) {\n\t\t// console.log(i * 400, \"I\");\n\t\t$(this).delay(i * 350).queue(function () {\n\t\t\t$(this).addClass('fadein');\n\t\t});\n\t\t\t\n\t\t// $(this).attr('data-post-sroll', 'in-view');\n\t\t// console.log($(this), \"THIS\");\n\t\t//  setTimeout(function () {\n\t\t//  \t$(this).css('visibility','visible');\n\t\t//  }, 2000);\n   });\n});"],"sourceRoot":"/source/"}