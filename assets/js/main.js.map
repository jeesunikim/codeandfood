{"version":3,"sources":["main.js","app.js","nav.js","scrollFadeIn.js"],"names":["window","document","$","undefined","onbeforeunload","scrollTo","jQuery","navSelf","fixedNav","prototype","init","this","isSticky","mainNav","bodyContainer","scrollPositionStart","defaultLH","parseInt","css","bindEvents","checkSticky","startScrolling","scrollTop","currentLH","calculatedLH","console","log","on","onScroll","setSticky","setUnsticky","nav","posts","eachPost","find","ready","each","i","delay","queue","addClass"],"mappings":"AAAA,cCAA,SAAWA,EAAQC,EAAUC,EAAGC,GAEhCD,EAAE,WACDF,EAAOI,eAAiB,WACvBJ,EAAOK,SAAS,EAAE,OAKjBL,OAAQC,SAAUK,QCTrB,SAAWN,EAAQC,EAAUC,EAAGC,GAE/B,GAAII,GACHC,EAAW,YAGZA,GAASC,UAAUC,KAAO,WAEzBC,KAAKC,UAAW,EAChBD,KAAKE,QAAUX,EAAE,UACjBS,KAAKG,cAAgBZ,EAAE,QACvBS,KAAKI,oBAAsB,EAC3BJ,KAAKK,UAAYC,SAASN,KAAKE,QAAQK,IAAI,gBAE3CX,EAAUI,KAEVA,KAAKQ,aACLR,KAAKS,eAGNZ,EAASC,UAAUU,WAAa,WAE/BR,KAAKU,kBAINb,EAASC,UAAUW,YAAc,WAChC,GAAIE,GAAYpB,EAAED,GAAUqB,WAEpBf,GAAQK,WAETD,KAAKY,UAAYN,SAASV,EAAQM,QAAQK,IAAI,gBAC9CP,KAAKa,aAOXjB,EAAQQ,oBACGR,EAAQS,UAAY,IAAQM,EAAYf,EAAQQ,qBAEnDJ,KAAKa,aAAejB,EAAQS,UAAYM,EAGzCf,EAAQM,QAAQK,IAAI,cAAeP,KAAKa,aAAe,MAEvDC,QAAQC,IAAInB,EAAQS,UAAW,oBAAqBL,KAAKY,UAAW,kBAC/DZ,KAAKY,UAAY,KACrBE,QAAQC,IAAI,QACZnB,EAAQM,QAAQK,IAAI,cAAe,WAIpCP,KAAKa,aAAejB,EAAQS,UAAYM,EAExCf,EAAQM,QAAQK,IAAI,cAAeP,KAAKa,aAAe,SA0BhEhB,EAASC,UAAUY,eAAiB,WACnCd,EAAQO,cAAca,GAAG,SAAUhB,KAAKiB,UACxC1B,EAAEF,GAAQ2B,GAAG,SAAUhB,KAAKiB,WAG7BpB,EAASC,UAAUmB,SAAW,WAC7BrB,EAAQa,eAGTZ,EAASC,UAAUoB,UAAY,WAC9BtB,EAAQK,UAAW,GAIpBJ,EAASC,UAAUqB,YAAc,WAChCvB,EAAQK,UAAW,GAGpBV,EAAE,WAED,GAAI6B,GAAM,GAAIvB,EACduB,GAAIrB,UAsBHV,OAAQC,SAAUK,OC7HrB,IAAI0B,OAAQ9B,EAAE,YACb+B,SAAWD,MAAME,KAAK,KAEvBhC,GAAED,UAAUkC,MAAM,WACjBF,SAASG,KAAK,SAASC,GAEtBnC,EAAES,MAAM2B,MAAU,IAAJD,GAASE,MAAM,WAC5BrC,EAAES,MAAM6B,SAAS","file":"main.js","sourcesContent":["\"use strict\";\n\n(function (window, document, $, undefined) {\n\n\t$(function () {\n\t\twindow.onbeforeunload = function () {\n\t\t\twindow.scrollTo(0, 0);\n\t\t};\n\t});\n})(window, document, jQuery);\n'use strict';\n\n(function (window, document, $, undefined) {\n\n\tvar navSelf,\n\t    fixedNav = function fixedNav() {},\n\t    scrollThreshold = 50;\n\n\tfixedNav.prototype.init = function () {\n\n\t\tthis.isSticky = false;\n\t\tthis.mainNav = $('header');\n\t\tthis.bodyContainer = $('body');\n\t\tthis.scrollPositionStart = 0;\n\t\tthis.defaultLH = parseInt(this.mainNav.css('line-height'));\n\n\t\tnavSelf = this;\n\n\t\tthis.bindEvents();\n\t\tthis.checkSticky();\n\t};\n\n\tfixedNav.prototype.bindEvents = function () {\n\n\t\tthis.startScrolling();\n\t};\n\n\tfixedNav.prototype.checkSticky = function () {\n\t\tvar scrollTop = $(document).scrollTop();\n\n\t\tif (!navSelf.isSticky) {\n\n\t\t\tthis.currentLH = parseInt(navSelf.mainNav.css('line-height'));\n\t\t\tthis.calculatedLH;\n\n\t\t\t// console.log(this.defaultLH, 'this.defaultLH');\n\n\t\t\t// scroll direction is up\n\t\t\t// scroll direction is down\n\n\t\t\tnavSelf.scrollPositionStart; // 0\n\t\t\tif (navSelf.defaultLH > 88 && scrollTop > navSelf.scrollPositionStart) {\n\n\t\t\t\tthis.calculatedLH = navSelf.defaultLH - scrollTop;\n\n\t\t\t\tnavSelf.mainNav.css('line-height', this.calculatedLH + 'px');\n\n\t\t\t\tconsole.log(navSelf.defaultLH, 'navSelf.defaultLH', this.currentLH, 'this.currentLH');\n\t\t\t\tif (this.currentLH < 92) {\n\t\t\t\t\tconsole.log(\"HEYY\");\n\t\t\t\t\tnavSelf.mainNav.css('line-height', 88 + 'px');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.calculatedLH = navSelf.defaultLH + scrollTop;\n\n\t\t\t\tnavSelf.mainNav.css('line-height', this.calculatedLH + 'px');\n\t\t\t}\n\t\t}\n\n\t\t// console.log(scrollTop, 'scrollTop', this.defaultLH, 'defaultLH');\n\n\t\t// subtract the number of scroll value\n\n\t\t// var isMobile = (this.breakpoints.current === 'sm') ? true : false;\n\t\t// var mainNavFixed = $(this.mainNav).hasClass('is-fixed');\n\n\t\t// var isNavFixed = mainNavFixed && isMobile;\n\t\t// var navAdjustment = isNavFixed ? this.mainNavHeight : 0;\n\t\t// var threshold = mainNavFixed && isMobile ? this.originalY - this.mainNavHeight : this.originalY;\n\n\t\t// // check if we need to set sticky\n\t\t// if (scrollTop >= threshold && !this.isSticky) {\n\t\t//     this.setSticky();\n\t\t// } else if (scrollTop < (this.originalY - navAdjustment) && this.isSticky) {\n\t\t//     this.setUnsticky();\n\t\t// }\n\t};\n\n\tfixedNav.prototype.startScrolling = function () {\n\t\tnavSelf.bodyContainer.on('scroll', this.onScroll);\n\t\t$(window).on('scroll', this.onScroll);\n\t};\n\n\tfixedNav.prototype.onScroll = function () {\n\t\tnavSelf.checkSticky();\n\t};\n\n\tfixedNav.prototype.setSticky = function () {\n\t\tnavSelf.isSticky = true;\n\t};\n\n\tfixedNav.prototype.setUnsticky = function () {\n\t\tnavSelf.isSticky = false;\n\t};\n\n\t$(function () {\n\n\t\tvar nav = new fixedNav();\n\t\tnav.init();\n\n\t\t// window.onscroll = function (e) {\n\t\t// \tvar scrollY = window.pageYOffset;\n\t\t// \tvar $header = $(\"header.site-header nav\");\n\t\t// \tvar $nav = $header.find('nav');\n\n\t\t// \tif (scrollY > 90) {\n\t\t// \t\tif(!$nav.hasClass('fixed')) {\n\t\t// \t\t\t$nav.addClass('fixed');\n\t\t// \t\t}\n\t\t// \t}else{\n\t\t// \t\tif($nav.hasClass('fixed')) {\n\t\t// \t\t\t$nav.removeClass('fixed');\n\t\t// \t\t}\n\t\t// \t}\n\t\t// };\n\t});\n})(window, document, jQuery);\n'use strict';\n\nvar posts = $('ul.posts'),\n    eachPost = posts.find('li');\n\n$(document).ready(function () {\n\teachPost.each(function (i) {\n\t\t// console.log(i * 400, \"I\");\n\t\t$(this).delay(i * 350).queue(function () {\n\t\t\t$(this).addClass('fadein');\n\t\t});\n\n\t\t// $(this).attr('data-post-sroll', 'in-view');\n\t\t// console.log($(this), \"THIS\");\n\t\t//  setTimeout(function () {\n\t\t//  \t$(this).css('visibility','visible');\n\t\t//  }, 2000);\n\t});\n});","(function (window, document, $, undefined) {\n\n$(function() {\n\twindow.onbeforeunload = function(){\n\t\twindow.scrollTo(0,0);\n\t};\n})\n\n\n})(window, document, jQuery);","(function (window, document, $, undefined) {\n\n\tvar navSelf,\n\t\tfixedNav = function() {},\n\t\tscrollThreshold = 50;\n\n\tfixedNav.prototype.init = function () {\n\n\t\tthis.isSticky = false;\n\t\tthis.mainNav = $('header');\n\t\tthis.bodyContainer = $('body');\n\t\tthis.scrollPositionStart = 0;\n\t\tthis.defaultLH = parseInt(this.mainNav.css('line-height'));\n\t\t\n\t\tnavSelf = this;\n\n\t\tthis.bindEvents();\n\t\tthis.checkSticky();\n\t}\n\n\tfixedNav.prototype.bindEvents = function () {\n\t\t\n\t\tthis.startScrolling();\n\t\n\t}\n\n\tfixedNav.prototype.checkSticky = function() {\n\t\tvar scrollTop = $(document).scrollTop();\n\n\t    if (!navSelf.isSticky) {\n\n\t        this.currentLH = parseInt(navSelf.mainNav.css('line-height'));\n\t        this.calculatedLH;\n\n\t\t\t// console.log(this.defaultLH, 'this.defaultLH');\n\n\t\t\t// scroll direction is up\n\t\t\t// scroll direction is down\n\n\t\t\tnavSelf.scrollPositionStart // 0\n\t        if ( navSelf.defaultLH > 88 && ( scrollTop > navSelf.scrollPositionStart )) {\n\n\t        \t this.calculatedLH = navSelf.defaultLH - scrollTop;\n\n\n        \t\tnavSelf.mainNav.css('line-height', this.calculatedLH + 'px'); \t\n\n\t        \tconsole.log(navSelf.defaultLH, 'navSelf.defaultLH', this.currentLH, 'this.currentLH')       \n\t        \tif ( this.currentLH < 92 ) {\n\t\t        \tconsole.log(\"HEYY\")\n\t\t        \tnavSelf.mainNav.css('line-height', 88 + 'px'); \n\t\t        } \n\n\t        } else {\n\t        \tthis.calculatedLH = navSelf.defaultLH + scrollTop;\n\n        \t\tnavSelf.mainNav.css('line-height', this.calculatedLH + 'px'); \t\n\t        }\n\n\t        \n\n\t    }\n\n\t    // console.log(scrollTop, 'scrollTop', this.defaultLH, 'defaultLH');\n\n\t    // subtract the number of scroll value \n\n\t    // var isMobile = (this.breakpoints.current === 'sm') ? true : false;\n\t    // var mainNavFixed = $(this.mainNav).hasClass('is-fixed');\n\n\t    // var isNavFixed = mainNavFixed && isMobile;\n\t    // var navAdjustment = isNavFixed ? this.mainNavHeight : 0;\n\t    // var threshold = mainNavFixed && isMobile ? this.originalY - this.mainNavHeight : this.originalY;\n\n\t    // // check if we need to set sticky\n\t    // if (scrollTop >= threshold && !this.isSticky) {\n\t    //     this.setSticky();\n\t    // } else if (scrollTop < (this.originalY - navAdjustment) && this.isSticky) {\n\t    //     this.setUnsticky();\n\t    // }\n\t};\n\n\tfixedNav.prototype.startScrolling = function () {\n\t\tnavSelf.bodyContainer.on('scroll', this.onScroll);\n\t\t$(window).on('scroll', this.onScroll);\n\t}\t\n\n\tfixedNav.prototype.onScroll = function () {\n\t\tnavSelf.checkSticky();\n\t}\n\n\tfixedNav.prototype.setSticky = function () {\n\t\tnavSelf.isSticky = true;\n\n\t}\n\n\tfixedNav.prototype.setUnsticky = function () {\n\t\tnavSelf.isSticky = false;\n\t}\n\n\t$(function() {\n\t\t\n\t\tvar nav = new fixedNav();\n\t\tnav.init();\n\n\t\t// window.onscroll = function (e) {\n\t\t// \tvar scrollY = window.pageYOffset;\n\t\t// \tvar $header = $(\"header.site-header nav\");\n\t\t// \tvar $nav = $header.find('nav');\n\n\n\t\t// \tif (scrollY > 90) {\n\t\t// \t\tif(!$nav.hasClass('fixed')) {\n\t\t// \t\t\t$nav.addClass('fixed');\n\t\t// \t\t}\n\t\t// \t}else{\n\t\t// \t\tif($nav.hasClass('fixed')) {\n\t\t// \t\t\t$nav.removeClass('fixed');\n\t\t// \t\t}\n\t\t// \t}\n\t\t// };\n\n\n\t});\n\n})(window, document, jQuery);","var posts = $('ul.posts'),\n\teachPost = posts.find('li');\n\t\n$(document).ready(function () {\n\teachPost.each(function(i) {\n\t\t// console.log(i * 400, \"I\");\n\t\t$(this).delay(i * 350).queue(function () {\n\t\t\t$(this).addClass('fadein');\n\t\t});\n\t\t\t\n\t\t// $(this).attr('data-post-sroll', 'in-view');\n\t\t// console.log($(this), \"THIS\");\n\t\t//  setTimeout(function () {\n\t\t//  \t$(this).css('visibility','visible');\n\t\t//  }, 2000);\n   });\n});"],"sourceRoot":"/source/"}